{"version":3,"sources":["_reset.scss","_fonts.scss","_variables.scss","_globals.scss","susy/output/support/_rem.scss","susy/language/susy/_container.scss","_layout.scss","susy/output/support/_clearfix.scss","susy/language/susy/_background.scss","susy/output/support/_background.scss","susy/output/shared/_background.scss","susy/language/susy/_gutters.scss","_mixins.scss","susy/output/float/_end.scss","susy/language/susy/_gallery.scss","susy/language/susy/_rows.scss","_relations.scss","_facts.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["/* Eric Meyer's Reset CSS v2.0 - http://cssreset.com */\nhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{border:0;font-size:100%;font:inherit;vertical-align:baseline;margin:0;padding:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:none}table{border-collapse:collapse;border-spacing:0}","/* ==================================================================\n## Menubar (Page Header)\n===================================================================== */\n\n#block-open-scratch-branding {\n\ta{\n\t\tfont-weight: bold;\n\t\tfont-size: $sitename-font-size;\n\t\ttext-transform: uppercase;\n\t\tcolor: $openorange-color;\n\t\ttext-decoration:none;\n\t}\n\ta:hover{\n\t\ttext-decoration: none;\n\t}\n}\n\n.menubar-content{\n\n\tspan, a, a:link, a:visited{\n\t\tfont-size: $menu-font-size;\n\t\tcolor: $menu-font-color;\n\t\ttext-decoration:none;\n\t}\n\n\ta:hover{\n\t\ttext-decoration: none;\n\t}\n\n\th2{\n\t\tdisplay:none;\n\t}\n}\n\n/* ==================================================================\n## Main Content Header\n===================================================================== */\n\n.main-content-header {\n\th1, h2, h3, p, span, a, a:link, a:visited {\n\t\tfont-size: $pagetitle-font-size;\n\t\tfont-weight: heavy;\n\t\tline-height: $pagetitle-line-height;\n\t\tcolor: $pagetitle-font-color;\n\t\ttext-transform: uppercase;\n\t\ttext-decoration:none;\n\t}\n\ta:hover{\n\t\t\ttext-decoration: underline;\n\t\t}\n}\n\n/* ==================================================================\n## Main Content\n===================================================================== */\n\n/* Page Title */\n.main-content {\n}\n\t%title {\n\t\th1, h2, h3, span, a, a:link, a:visited {\n\t\t\ttext-transform: uppercase;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\ta:hover{\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t/* defined in block.html.twig */\n\t.block-title{ \n\t\t@extend %title;\n\t\th2, span, a, a:link, a:visited {\n\t\t\tfont-size: $blocktitle-font-size;\n\t\t\tline-height: $blocktitle-line-height;\n\t\t\tcolor: $blocktitle-font-color;\n\t\t}\n\t}\n\n\t.manifesto-title{ \n\t\t@extend %title;\n\t\tspan, a, a:link, a:visited {\n\t\t\tfont-size: $manifesto-title-font-size;\n\t\t\tline-height: $manifesto-title-line-height;\n\t\t\tcolor: $manifesto-title-font-color;\n\t\t}\n\t}\n\n\t.node-title{ \n\t\t@extend %title;\n\t\th3, span, a, a:link, a:visited {\n\t\t\tfont-size: $title-font-size;\n\t\t\tline-height: $title-line-height;\n\t\t\tcolor: $title-font-color;\n\t\t}\n\t}\n\n\t.job-title{ \n\t\t@extend %title;\n\t\th3, span, a, a:link, a:visited {\n\t\t\tfont-size: $jobtitle-font-size;\n\t\t\tline-height: $title-line-height;\n\t\t\tcolor: $title-font-color;\n\t\t}\n\t}\n\n\t.row-title{}\n\n\t.headline{ \n\t\t@extend %title;\n\t\th3, span, a, a:link, a:visited {\n\t\t\tfont-size: $headline-font-size;\n\t\t\tline-height: $headline-line-height;\n\t\t\tcolor: $headline-font-color;\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t.events-headline{ \n\t\t@extend %title;\n\t\th3, span, a, a:link, a:visited {\n\t\t\tfont-size: $events-headline-font-size;\n\t\t\tline-height: $events-headline-line-height;\n\t\t\tcolor: $headline-font-color;\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t.slide-caption{ \n\t\t@extend %title;\n\t\tspan, a, a:link, a:visited{\n\t\t\tline-height: $slide-caption-line-height;\n\t\t\tfont-size: $slide-caption-font-size;\n\t\t\tcolor: $slide-caption-font-color;\n\t\t}\n\t}\n\n/* override block title size for facts */\n#main-content-facts{\n\t.block-title{ \n\t\th2, span, a, a:link, a:visited {\n\t\t\tfont-size: $facttitle-font-size;\n\t\t}\n\t}\n}\n\n/* ==================================================================\n## table views\n===================================================================== */\n\n.views-table {\n\n\ttable {\n\t\twidth:100%;\n\t\tdisplay:table;\n\t\ttable-layout:fixed;\n\t}\n\n\tthead {\n\t\tdisplay: none;\n\t}\n\n\ttbody {\n\t\tfont-size: $table-font-size;\n\t\tline-height: $table-row-height;\n\t\t\n\t}\n\n\tspan, a, a:link, a:visited {\n\t\ttext-transform: uppercase;\n\t\ttext-decoration: none;\n\t\tcolor: $table-font-color;\n\t}\n\n\ta:hover{\n\t\ttext-decoration: underline;\n\t}\n\n\ttr {\n\t\tborder-top: 1px solid #e1e1e1;\t\t\n\t\theight: $table-row-height;\n\t}\n\n\ttd {\n\t\tdisplay: block;\n\t\t/*white-space: nowrap;*/\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\ttd.year {\n\t\tfloat: left;\n\t\twidth: $table-col1-width;\n\t\t/*padding: 0 0 0 .2rem;*/\n\t}\n\n\ttd.title {\n\t\tfloat: left;\n\t\twidth: $table-col2-width;\n\t\ttext-align: right;\n\t\t/*padding: 0 0 0 .2rem;*/\n\t}\n\n\ttd.arrow {\n\t\tfloat: right;\n\t\twidth: $table-col3-width;\n\t\ttext-align: right;\n\t\t/*padding: 0 0 0 .2rem;*/\n\t}\n}\n\n/* ==================================================================\n## bodies\n===================================================================== */\n\np{\n\tfont-size: $base-font-size;\n\tline-height: $base-line-height;\n\tcolor: $base-font-color;\n}\n\n.menubar {\n\tp {\n\t\tfont-size: $base-font-size;\n\t\tline-height: $base-line-height;\n\t\tcolor: $base-font-color;\n\t}\n}\n\n.main-content {\n\tp {\n\t\tfont-size: $base-font-size;\n\t\tline-height: $base-line-height;\n\t\tcolor: $base-font-color;\n\t}\n}\n\n.manifesto p{\n\tfont-size: $manifesto-font-size;\n\tline-height: $manifesto-line-height;\n\tcolor: $manifesto-font-color;\n}\n\n/* ==================================================================\n## Tags\n===================================================================== */\n\n.tags{\n\tspan{\n\t\tfont-size: $tags-font-size;\n\t\tline-height: $tags-line-height;\n\t\tcolor: $tags-font-color;\n\t\ttext-transform: uppercase;\n\t\ttext-decoration:none;\n\t}\n\ta, a:link, a:visited{\n\t\tfont-size: $tags-font-size;\n\t\tline-height: $tags-line-height;\n\t\tcolor: $tags-link-color;\n\t\ttext-transform: uppercase;\n\t\ttext-decoration:none;\n\t}\n\ta:hover{\n\t\ttext-decoration: underline;\n\t}\n}\n\n\n\n/* ==================================================================\n## Footer\n===================================================================== */\n\n.main-footer{\n\tspan, a, a:link, a:visited{\n\t\tfont-size: $menu-font-size;\n\t\tcolor: $menu-font-color;\n\t\ttext-decoration:none;\n\t}\n\th2{\n\t\tdisplay:none;\n\t}\n}","/* ==================================================================\n## defaults\n===================================================================== */\n$background-color: #fff;\n\n$base-font-family: Helvetica, Arial, sans-serif;\n\n\n$base-line-height: 18px;\n\n\n/* ==================================================================\n## Colors\n===================================================================== */\n\n/* Color Pallete */\n$base-font-color: #505050;\n$lighter-font-color: #777;\n$darker-font-color: #333;\n$darker-font-color: #000;\n$openorange-color: #ff9d00;\n$opengrey-color: #888;\n$link-font-color: #98a6bc;\n\n$pagetitle-font-color: \t\t$darker-font-color;\n$blocktitle-font-color: \t$darker-font-color;\n$title-font-color: \t\t\t$darker-font-color;\n$menu-font-color: \t\t\t$base-font-color;\n$manifesto-font-color: \t\t$lighter-font-color;\n$headline-font-color: \t\t$lighter-font-color;\n$fact-font-color: \t\t\t$base-font-color;\n$tags-font-color: #666;\n$ts-font-color: #999;\n$foot-font-color: $base-font-color;\n\n\n$title-link-color: $title-font-color;\n$tags-link-color: $link-font-color;\n$menu-link-color: $menu-font-color;\n\n$footer-bg-color: #333;\n\n$slide-caption-font-color: $lighter-font-color;\n\n$table-font-color: $darker-font-color;\n\n\n$manifesto-title-font-color: $darker-font-color;\n\n\n/* ==================================================================\n## Fonts Size\n===================================================================== */\n\n/* Sizing Pallete */\n$base-font-size: 12px;\n\n$sitename-font-size: 15px;\n$pagetitle-font-size: 12px;\n$blocktitle-font-size: 12px;\n$facttitle-font-size: 11px;\n$title-font-size: 12px;\n$jobtitle-font-size: 12px;\n$headline-font-size: 11px;\n$events-headline-font-size: 12px;\n$menu-font-size: 12px;\n$manifesto-font-size: $base-font-size;\n$fact-font-size: 11px;\n$ts-font-size: 10px;\n$tags-font-size: 10px;\n\n$slide-caption-font-size: 11px;\n\n$table-font-size: 11px;\n\n$manifesto-title-font-size: 14px;\n\n\n/* ==================================================================\n## Fonts Line Heights\n===================================================================== */\n\n$base-title-line-height: 14px;\n\n$sitename-line-height: 16px;\n$pagetitle-line-height: base-line-height;\n$blocktitle-line-height: base-line-height;\n$title-line-height: 12px;\n$headline-line-height: 10px;\n$events-headline-line-height: 11px;\n$fact-line-height: 12px;\n$ts-line-height: 7px;\n$manifesto-line-height: 20px;\n$info-line-height: 14px;\n$tags-line-height: $base-line-height;\n$slide-caption-line-height: $base-line-height;\n\n$manifesto-title-line-height: $base-title-line-height;\n\n/* ==================================================================\n## Padding\n===================================================================== */\n\n$base-row-height: 42px;\n$base-row-pad: 14px;\n\n/* ==================================================================\n## Table\n===================================================================== */\n\n$table-row-height: $base-row-height;\n$table-col1-width: 20%;\n$table-col2-width: 70%;\n$table-col3-width: 10%;\n\n/* ==================================================================\n## Grid\n===================================================================== */\n\n$total-cols             : 4;  \n$col-width              : 162px;  \n$gutter-width           : 40px;  \n$side-gutter-width      : $gutter-width; \n\n","/* =======================================================================\n## ++ Globals\n========================================================================== */\nhtml{\n    font-size: 100%;\n}\n\nbody{\n    -webkit-font-smoothing: antialiased;\n    font-family: $base-font-family;\n    background: #333;\n}\n\n*, *:before, *:after{\n    box-sizing:border-box;\n}\n\n\n/* =======================================================================\n## ++ Cleafix\n========================================================================== */\n\n/* float clearing for IE6 */\n* html .clearfix{\n height: 1%;\n overflow: visible;\n}\n\n/* float clearing for IE7 */\n*+html .clearfix{\n min-height: 1%;\n}\n\n/* float clearing for everyone else */\n.clearfix:after{\n clear: both;\n content: \".\";\n display: block;\n height: 0;\n visibility: hidden;\n font-size: 0;\n}\n\n.clr{clear:both;}\n\n\n\n\n\n\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","/* ==================================================================\n## Grid\n===================================================================== */\n/*\n\n$susy: (\n  flow: rtl | ltr*\n  \tltr - Layout elements will flow from left to right.\n  \trtl - Layout elements will flow from right to left.\n  math: fluid* | static\n  \tfluid - grid spans will be calculated relative to the container, and output as % values.\n  \tstatic - grid values will be calculated as multiples of the column-width setting.\n  output: float | isolate\n  gutter-position: after,\n  container: auto,\n  container-position: center,\n  columns: 4,\n  gutters: .25,\n  column-width: false,\n  global-box-sizing: content-box,\n  last-flow: to,\n  debug: (\n    image: hide,\n    color: rgba(#66f, .25),\n    output: background,\n    toggle: top right,\n  ),\n  use-custom: (\n    background-image: true,\n    background-options: false,\n    box-sizing: true,\n    clearfix: false,\n    rem: true,\n  )\n);\n\n*/\n\n/* GLOBAL SUSY SETTINGS */\n\n$susy: (\n  /*flow: ltr,*/\n  /*math: fluid,*/\n  output: float,\n  gutter-position: inside,\n  /*container: auto,*/\n  /*container-position: center,*/\n  columns: 4,\n  gutters: 3/8,\n  /*column-width: false,*/\n  global-box-sizing: content-box,\n  /*last-flow: to,*/\n  debug: (\n    image: show-columns,\n    color: rgba(#AEEFF2, .15),\n    output: overlay,\n    toggle: top right,\n  )\n  /*use-custom: (\n    background-image: true,\n    background-options: false,\n    box-sizing: true,\n    clearfix: false,\n    rem: true,\n  )*/\n);\n\n/* GLOBAL SUSY SETTINGS */\n\n$susy-gallery: (\n  gutter-position: before,\n  columns: 4,\n  gutters: 3/16,\n  global-box-sizing: border-box\n);\n\n\n/* ==================================================================\n## Grid\n===================================================================== */\n\n/* wrapper for all page content */\n.container {\n\t@include container;\n}\n\n/* wrapper for menubar regions */\n.menubar-wrapper {\n\n}\n\n\t.menubar-header{\n\t\t@include span(3 of 4);\n\t\tfloat:left;\n\t}\n\n\t.menubar-content{\n\n\t}\n\n\t#menubar-content-primary{\n\t\t/*display:none;*/\n\t}\n\n\t#menubar-content-secondary{\n\t\t@include span(1 of 4 last);\n\t\tfloat:right;\n\t}\n\n\n/* wrapper for content regions */\n.main-wrapper {\n\n}\n\n\t.main-header {\n\t\t/*@include span(4);*/\n\t}\n\n\t\t#main-content-header-left{\n\t\t\t@include span(3 of 4);\n\t\t\tfloat:left;\n\t\t}\n\n\t\t#main-content-header-right{\n\t\t\t@include span(1 of 4 last);\n\t\t\tfloat:right;\n\t\t}\n\n\t.main-content {\n\t\t\n\t}\n\n\t#main-content-slideshow{\n\n\t\t.slide {\n\t\t\t@include span(4);\n\t\t}\n\n\t\t.slide-title {\n\t\t\t@include span(3 of 4);\n\t\t\tfloat:left;\n\t\t}\n\n\t\t.arrow {\n\t\t\t@include span(1 of 4 last);\n\t\t\tfloat:right;\n\t\t}\n\n\t\t.slide-controls{\n\t\t\t@include span(4);\n\t\t}\n\n\t}\n\n\t#main-content-primary{\n\t\t@include span(4);\n\t}\n\n\t/* adsf */\n\t#main-content-relations{\n\n\t\t@include span(4);\n\t\t@include clearfix;\t\n\n\t}\n\n\t#main-content-facts{\n\n\t\t/*@include layout($susy);*/\n\t\t@include layout((\n\t\t\tgutter-position: inside,\n\t\t\tcolumns: 4,\n\t\t\tgutters: 3/8,\n\t\t\tglobal-box-sizing: border-box\n\t\t));\n\n\t\t@include span(4);\n\t\t@include clearfix;\n\n\t}\n\n\t#main-content-gallery{\n\n\t\t@include clearfix;\n\n\t\t@include layout((\n\t\t\tgutter-position: inside,\n\t\t\tcolumns: 4,\n\t\t\tgutters: 3/8,\n\t\t\tglobal-box-sizing: content-box\n\t\t));\n\n\t\t.region {\n\t\t\t@include span(4);\t\t\n\t\t}\n\t\t\n\t\t.gallery-list{\n\n\t\t\t@include clearfix;\n\t\t\t@include layout((\n\t\t\t\tgutter-position: before,\n\t\t\t\tcolumns: 4,\n\t\t\t\tgutters: 3/16,\n\t\t\t\tglobal-box-sizing: border-box\n\t\t\t));\n\n\t\t}\n\n\t\t.gallery-list-item{\n\n\t\t\t@include gallery(2 of 4);\n\t\t\tmargin-bottom: gutter(4);\n\t\t}\n\t}\n\n\t.main-footer{\n\n\t\t@include clearfix;\n\t\t@include layout((\n\t\t\tgutter-position: inside,\n\t\t\tcolumns: 4,\n\t\t\tgutters: 3/8,\n\t\t\tglobal-box-sizing: content-box\n\t\t));\n\t\t\n\t\t/*background: $footer-bg-color;*/\n\t\t/*width:100%;*/\n\n\t\t.region{\n\t\t\t@include span(4);\n\t\t\tborder-top: 1px solid #666;\t\n\t\t\tmargin-top: 100px;\n\t\t}\n\n\t\t.block-content{\n\t\t\tpadding: 14px 0;\n\t\t}\n\t}\n\n/* ==================================================================\n## Modules\n===================================================================== */\n\n/* wrapper for all page content */\n.container {\n\n}\n\n/* wrapper for menubar regions */\n.menubar-wrapper {\n\n\twidth:100%;\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\tz-index:100;\n\theight: $base-row-height;\n\n\tp, span, a{\n\t\tline-height: $base-row-height;\n\t}\n}\n\n\t.menubar-header{\n\t\tbackground:darkgrey;\n\t}\n\n\t.menubar-content{\n\t\tbackground:grey;\n\n\t}\n\n\t\t#menubar-content-primary{\n\t\t\t/*display:none;*/\n\t\t}\n\n\t\t#menubar-content-secondary{\n\t\t\tp, span, a{\n\t\t\t\ttext-align: right;\n\t\t\t}\n\t\t}\n\n\n/* wrapper for content regions */\n.main-wrapper {\n\t\n\tbackground:white;\n\n\t\t.views-field{\n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n\t\t.views-field-title { \n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n\t\t.block-title, { \n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n\t\t.slidetitle { \n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n\t\t.views-field-body p{\n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n}\n\n\t.main-header {\n\n\t\t/*padding: $base-row-pad 0;*/\n\t\theight: $base-row-height;\n\t\tmargin-top:142px;\n\t\t\n\n\t\tp, span, a{\n\t\t\tline-height: $base-row-height;\n\t\t}\n\t}\n\n\t\t#main-content-header-left{\n\n\t\t\tbackground: lightgrey;\n\t\t}\n\n\t\t#main-content-header-right{\n\n\t\t\tbackground: grey;\n\n\t\t\tp, span, a{\n\t\t\t\ttext-align: right;\n\t\t\t}\n\t\t}\n\n\t.main-content {\n\t\t\n\t}\n\n\t#main-content-slideshow{\n\n\t\t/* override */\n\t\t.views-field{\n\t\t\tmargin: 0;\n\t\t}\n\n\t\t.slide-title {\n\t\t\theight: base-row-height;\n\t\t}\n\n\t\t.arrow {\n\t\t\theight: base-row-height;\n\t\t\ttext-align: right;\n\t\t}\n\n\t\t.slide-title a {\n\t\t\tline-height: $base-row-height;\n\t\t}\n\n\t\t.arrow a {\n\t\t\tline-height: $base-row-height;\n\t\t}\n\n\t\t.slide-controls{\n\t\t\theight: $base-row-height;\n\t\t}\n\n\t\t.slide-controls span{\n\t\t\tline-height: $base-row-height;\n\t\t}\n\n\t}\n\n\t#main-content-primary{\n\n\t\t.block{\n\t\t\t/*border-top: 1px solid #999;*/\t\n\t\t}\t\n\n\t\t.views-row {\n\t\t\tborder-top: 1px solid #e1e1e1;\n\t\t}\n\n\t\t/* recent news temp overrides */\n\t\t#block-open-scratch-views-block-recent-news-block-1{ \n\t\t\t\n\t\t\tborder-top: 1px solid #999;\n\n\t\t\t.views-row {\n\t\t\t\tborder-top: none;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t\n\t#main-content-relations{\n\n\t\t.block{\n\t\t\t/*padding: 14px 0;*/\n\t\t\tborder-top: 1px solid #666;\t\n\t\t}\t\n\n\t}\n\n\t#main-content-facts{\n\n\t\t.region{\n\t\t\tborder-top: 1px solid #666;\t\n\t\t}\t\n\n\t\t.block{\n\n\t\t\tbackground:#f3f3f3;\n\t\t}\n\n\t}\n\t\n\n\t#main-content-gallery{\n\n\t\t.region {\n\t\n\t\t}\n\t\t\n\t\t.gallery-list{\n\n\t\t}\n\n\t\t.gallery-list-item{\n\n\t\t\tbackground:#999;\n\t\t}\n\t}\n\n\t.main-footer{\n\n\t\t.region{\n\t\t\tborder-top: 1px solid #666;\t\n\t\t\tmargin-top: 100px;\n\t\t}\n\n\t\t.block-content{\n\t\t\tpadding: 14px 0;\n\t\t}\n\t}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : #AEEFF2; //lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n","// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n","// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","/* =======================================================================\n## ++ Media Queries\n========================================================================== */\n\n/* \n    Used for media queries. \n    Add these mixins in your normal scss flow.\n    \n    Eg.\n    .container{\n        width:1024px;\n        \n        @include tablets{\n            width:90%;\n        }\n    }\n*/ \n\n@mixin lowresmonitors{\n        @media screen and (max-width: 1350px){ @content;}\n}\n\n@mixin tablets{\n        @media screen and (max-width: 1100px){ @content; }\n}\n\n@mixin phones{\n        @media screen and (max-width: 720px){ @content; }\n}\n\n/* =======================================================================\n## ++ Unit transform\n========================================================================== */\n\n/*  \n    Used for making containers have width in percentages. \n    Usage: define elemnt width in px and the width of parent elemnt in px. \n    eg. .block{width:cp(512px, 1024px)} this will result in .block{width:50%;}   \n*/\n\n@function cp($target, $container) {\n    @return ($target / $container) * 100%;\n}\n\n/*  \n    Used for making px values convert to rem values\n    Usage: define font-size in px and it will convert to rems\n    eg. font-size: rem(14px);\n*/\n\n@function rem($target, $context: $base-font-size) {\n   @if $target == 0 { @return 0 }\n   @return $target / $context + 0rem;\n}\n$base-font-size:16px;\n\n/* =======================================================================\n## ++ Clearfix\n========================================================================== */\n\n@mixin clearfix {\n  &:after {\n    content: \"\"; \n    display: table;\n    clear: both; \n  }\n}\n\n/* =======================================================================\n## ++ Grid\n========================================================================== */\n\n@mixin gallery-list {\n\n    @include clearfix;\n    @include layout((\n        gutter-position: before,\n        columns: 4,\n        gutters: 3/16,\n        global-box-sizing: border-box\n    ));\n\n}\n\n@mixin gallery-list-item {\n\n    @include gallery(2 of 4);\n    margin-bottom: gutter(4);\n}\n\n@mixin base-title {\n        \n    text-transform: uppercase;\n    text-decoration: none;\n}","// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n","// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n","/*\n * Relations Component (Block view)\n *\n * LAYOUT:\n *\n * relations--header\n * relations--header-left\n * relations--header-right\n * relations--gallery\n * relations--gallery-list (ul)\n * relations--gallery-item (li)\n *\n * CONTENT:\n *\n * relations--title (h2)\n *\n *\n */\n\n\n\t\n\n/* ==================================================================\n## Layout\n===================================================================== */\n\n#main-content-relations {}\n\n\t.relations-header {}\n\n\t\t.relations-header-left {\n\n\t\t\tmargin: $base-row-pad 0;\n\t\t}\n\n\t\t.relations-header-right {}\n\n\t.relations-gallery {}\n\n\t\t/*@mixin gallery-list{\n\n\t\t    @include clearfix;\n\t\t    @include layout((\n\t\t        gutter-position: before,\n\t\t        columns: 4,\n\t\t        gutters: 3/16,\n\t\t        global-box-sizing: border-box\n\t\t    ));\n\n\t\t}\n\n\t\t@mixin gallery-list-item{\n\n\t\t    @include gallery(2 of 4);\n\t\t    margin-bottom: gutter(4);\n\t\t}*/\n\n\t\t/*ul*/.relations-list{\n\n\t\t\t@include gallery-list;\n\t\t}\n\n\t\t/*li*/.relations-list-item{\n\n\t\t\t@include gallery-list-item;\n\t\t\t/*background:#999;*/\n\t\t}\n\n\n\n\n/* ==================================================================\n## Theme\n===================================================================== */\n\n/*h2*/.relations-title{\n\n\t@include base-title;\n\n\tfont-size: $blocktitle-font-size;\n\tline-height: $blocktitle-line-height;\n\tcolor: $blocktitle-font-color;\t\n}","/*\n * Factsheet Component (Block view)\n *\n * LAYOUT:\n *\n * factsheet--header\n * factsheet--header-left\n * factsheet--header-right\n * factsheet--gallery\n * factsheet--gallery-list (ul)\n * factsheet--gallery-item (li)\n *\n * CONTENT:\n *\n * factsheet--title (h2)\n *\n *\n */\n\n\n\n/* ==================================================================\n## Layout\n===================================================================== */\n\n/*@mixin gallery-list{\n\n    @include clearfix;\n    @include layout((\n        gutter-position: before,\n        columns: 4,\n        gutters: 3/16,\n        global-box-sizing: border-box\n    ));\n\n}\n\n@mixin gallery-list-item{\n\n    @include gallery(2 of 4);\n    margin-bottom: gutter(4);\n}*/\n\n\n/* .factsheet-gallery */\n#main-content-facts {\n\n\t/*.factsheet-gallery-container {*/\n\t.region {\n\n\t\t@include clearfix;\n\t\t@include layout((\n\t\t\tgutter-position: before,\n\t\t\tcolumns: 4,\n\t\t\tgutters: 3/16,\n\t\t\tglobal-box-sizing: border-box\n\t\t));\n\n\t}\n\n\t\t/*li.*//*.factsheet-gallery-item{*/\n\t\t.block {\n\n\t\t\t@include gallery(2 of 4);\n    \t\tmargin-bottom: gutter(4);\n\t\t}\n\n\t\t\t.factsheet-header {\n\n\t\t\t\tmargin: $base-row-pad 0;\n\t\t\t}\n\n\t\t\t/* list of facts */\n\t\t\t.factsheet-facts {\n\n\t\t\t\tmargin: $base-row-pad 0;\n\t\t\t}\n}\n\n/* ==================================================================\n## Theme\n===================================================================== */\n\n/*h2*/.factsheet-title{\n\n\t@include base-title;\n\t\n\tfont-size: $blocktitle-font-size;\n\tline-height: $blocktitle-line-height;\n\tcolor: $blocktitle-font-color;\t\n\n}\n\n/*div*/.factsheet-fact{\n\n\tp, span, a, a:link, a:visited {\n\t\tfont-size: $fact-font-size;\n\t\tline-height: $fact-line-height;\n\t\tcolor: $fact-font-color;\n\t\ttext-decoration:none;\n\t}\n\n\ta:hover{\n\t\ttext-decoration: none;\n\t}\n\n}\n\n/* ==================================================================\n## Facts - tmp\n===================================================================== */\n\n/*.fact, .multifact{\n\n\tp, span, a, a:link, a:visited, .field-content{\n\t\tfont-size: $fact-font-size;\n\t\tline-height: $fact-line-height;\n\t\tcolor: $fact-font-color;\n\t\ttext-decoration:none;\n\t}\n\n\ta:hover{\n\t\ttext-decoration: none;\n\t}\n}*/"],"sourceRoot":"/source/"}