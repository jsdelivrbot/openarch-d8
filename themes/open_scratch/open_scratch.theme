<?php

use Drupal\Core\Link;
use Drupal\Core\Url;

function open_scratch_preprocess(&$variables, $hook)
{

    // Inject the current language into every template to ease theme development.
  	$variables['current_language'] = \Drupal::languageManager()->getCurrentLanguage();
    $variables['current_language_id'] = \Drupal::languageManager()->getCurrentLanguage()->getId();

    // Inject a usable directory path.
  	$variables['theme_path'] = base_path() . $variables['directory'];
  	
  	// Generate Url Strings    
    $cur_lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
    if ($cur_lang_id == "zh-hans") {
      $url_prefix = 'cn/';
    } elseif ($cur_lang_id == "en") {
      $url_prefix = '';
    } else {
      $url_prefix = '';
    }

    //$variables['base_path'] = base_path();
    $variables['root_path'] = base_path();
    $variables['base_path'] = base_path() . $url_prefix;
    $variables['current_language_prefix'] = $url_prefix;

    //current path, eg. "practice" (see http://drupal.stackexchange.com/questions/106103/get-the-current-path-alias-or-path)
    $variables['current_path'] = ltrim(\Drupal::service('path.current')->getPath(), '/');
    
    //$options = ['language' => $cur_language,];
    $options['language'] = \Drupal::languageManager()->getCurrentLanguage();
  	// $variables['practice_path'] = Url::fromUri('internal:/practice')->toString();
    //$variables['event_path'] = Url::fromUri('internal:/event', $options)->toString();
    //$variables['event_path'] = base_path() . $url_prefix . 'event';
    // $variables['events_path'] = Url::fromUri('internal:/events')->toString();
    // $variables['projects_gallery_path'] = Url::fromUri('internal:/projects/gallery')->toString();
    // $variables['projects_table_path'] = Url::fromUri('internal:/projects/table')->toString();
    // $variables['projects_teasers_path'] = Url::fromUri('internal:/projects/teasers')->toString();
    // $variables['task_path'] = Url::fromUri('internal:/task')->toString();

    //translations
    $variables['starts'] = t('Starts');
    // $variables['media'] = t('Media');
    // $variables['press'] = t('Press');
    // $variables['video'] = t('Video');
    // $variables['awards'] = t('Awards');
    // $variables['data'] = t('Data');
    // $variables['related'] = t('Related'); 

}


/**
 * Preprocess iframes in the format of preprocess_video_embed_iframe__PROVIDER.
 *
 * Allows you to preprocess video embed iframes but only for specific providers.
 * This allows you to, for instance control things specific to each provider.
 * For example, if you wanted to enable a specific youtube feature by altering
 * the query string, you could do so as demonstrated.
 */
function open_scratch_preprocess_video_embed_iframe__vimeo(&$variables) {
  // Remove the YouTube logo from youtube embeds.
  $variables['query']['title'] = '0';
  $variables['query']['byline'] = '0';
  $variables['query']['portrait'] = '0';
  $variables['query']['color'] = 'ffffff';
}

/**
 * Implements hook_form_alter().
 */
function open_scratch_form_search_block_form_alter(&$form, &$form_state) {
  $form['keys']['#attributes']['placeholder'][] = t('Search...');
}

/**
 * preprocess search result
 */
function open_scratch_preprocess_search_result(&$variables) {
  $language_interface = \Drupal::languageManager()->getCurrentLanguage();

  $result = $variables['result'];
  // $variables['url'] = UrlHelper::stripDangerousProtocols($result['link']);

  $variables['node_id'] = ltrim($result['link'], '/');

  $variables['title'] = $result['title'];
  if (isset($result['language']) && $result['language'] != $language_interface->getId() && $result['language'] != LanguageInterface::LANGCODE_NOT_SPECIFIED) {
    $variables['title_attributes']['lang'] = $result['language'];
    $variables['content_attributes']['lang'] = $result['language'];
  }

  // $info = array();
  // if (!empty($result['plugin_id'])) {
  //   $info['plugin_id'] = $result['plugin_id'];
  // }
  // if (!empty($result['user'])) {
  //   $info['user'] = $result['user'];
  // }
  // if (!empty($result['date'])) {
  //   $info['date'] = format_date($result['date'], 'short');
  // }
  // if (isset($result['extra']) && is_array($result['extra'])) {
  //   $info = array_merge($info, $result['extra']);
  // }

  // $variables['snippet'] = isset($result['snippet']) ? $result['snippet'] : '';

  // $variables['info_split'] = $info;
  // $variables['info'] = array(
  //   '#type' => 'inline_template',
  //   '#template' => '{{ info|safe_join(" - ") }}',
  //   '#context' => array('info' => $info),
  // );
}

//kint($variables);